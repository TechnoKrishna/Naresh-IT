Q ) What is JavaScript?

JavaScript (often called JS) is a programming language used mainly to make websites interactive.

👉 HTML gives structure to a webpage.
👉 CSS gives style and color to it.
👉 JavaScript adds life and actions to it

like buttons that react when clicked, forms that check your input, animations, or dynamic content that changes without reloading the page.

🧩 In short:

JavaScript is a language that makes websites interactive, dynamic, and smart — it’s what turns a static web page into something that feels alive.

Q ) How JavaScript works behind the scenes (step-by-step)

⚙️ Step 1: Webpage loading

When you open a website, your browser (like Chrome or Edge) first loads:

    HTML → builds the structure of the page
    CSS → applies colors, fonts, layout
    JavaScript → adds actions and logic

So the browser gets all three files and prepares the page.

⚙️ Step 2: Browser’s JavaScript Engine

Every browser has a JavaScript engine that reads and executes the JavaScript code.

    Chrome → uses V8 engine
    Firefox → uses SpiderMonkey
    Edge → uses Chakra

This engine’s job is to understand and run JavaScript commands line by line.

⚙️ Step 3: DOM (Document Object Model)

When the page loads, the browser creates something called the DOM —
It’s like a tree structure of all elements on the page (headings, buttons, images, etc.)

    JavaScript can access and change anything inside the DOM.

For example : document.getElementById("title").style.color = "blue";

    This line finds the element with id “title” and changes its color to blue.

⚙️ Step 4: Event Handling

JavaScript waits for events — like:

    Clicking a button
    Typing in a box
    Scrolling the page

When these events happen, JavaScript runs specific code (called a function) to do something — like show a message or change color.

⚙️ Step 5: Execution Flow (Single-threaded)

JavaScript runs in one main thread — meaning it does one thing at a time.
But it handles time-taking tasks (like fetching data) smartly using asynchronous programming (we’ll cover that later).

Q ) Where Can You Write JavaScript Code?

In HTML, you can write JavaScript inside:

    <script> ... </script>

    And you can place this <script> tag in two main places:
    
        Inside the <head> section
        At the end of the <body> section

    Both work — but they behave differently.

⚙️ 1️⃣ Script inside <head>

Example:

<html>
<head>
  <script>
    document.getElementById("title").style.color = "red";
  </script>
</head>
<body>
  <h1 id="title">Hello</h1>
</body>
</html>

👉 Problem: When the browser reads the <head> section, it hasn’t yet loaded the body.

So document.getElementById("title") doesn’t exist yet!

This causes an error because JavaScript tries to change something before it’s created.

✅ To fix that, we can use:

<script>
  window.onload = function() {
    document.getElementById("title").style.color = "red";
  };
</script>

This tells JavaScript to wait until the page is fully loaded before running.

🧠 In short:
If script is in <head>, you may need to wait for the page to load first.

⚙️ 2️⃣ Script at the end of <body>

Example:

<html>
<body>
  <h1 id="title">Hello</h1>

  <script>
    document.getElementById("title").style.color = "red";
  </script>
</body>
</html>


Here, when JavaScript runs, the <h1> is already loaded — so it works perfectly.

That’s why most developers put scripts at the end of the body.

✅ Advantages:

    The page loads faster (HTML shows first, JS runs later)
    No need for extra code like window.onload
    Best for user experience